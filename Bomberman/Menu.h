#pragma once
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "Buttons.h"

#include <SFML/Graphics/RenderWindow.hpp>
#include <SFML/Graphics/Sprite.hpp>
#include <memory>
#include <map>

////////////////////////////////////////////////////////////
/// \brief Game menu
///
////////////////////////////////////////////////////////////
class Menu {

	////////////////////////////////////////////////////////////
	/// \brief Default constructor
	///
	/// Creates a window and buttons
	///
	////////////////////////////////////////////////////////////
	Menu();

	////////////////////////////////////////////////////////////
	/// \brief Disabled copy constructor
	///
	////////////////////////////////////////////////////////////
	Menu(const Menu&) = delete;

	////////////////////////////////////////////////////////////
	/// \brief Disabled assignment operator
	///
	////////////////////////////////////////////////////////////
	Menu& operator =(const Menu&) = delete;

	////////////////////////////////////////////////////////////
	/// \brief Displays the menu
	///
	////////////////////////////////////////////////////////////
	void show();

	////////////////////////////////////////////////////////////
	/// \brief Preforms the action of the i button
	///
	/// \param i The button that was clicked
	///
	////////////////////////////////////////////////////////////
	void performAction(const size_t i);

	////////////////////////////////////////////////////////////
	/// \brief Handles button pressed events
	///
	/// \param pos The position where the mouse cursor was clicked
	///
	////////////////////////////////////////////////////////////
	void handleMouseButtonPressed(const sf::Vector2f& pos);

	////////////////////////////////////////////////////////////
	/// \brief Handles button released events
	///
	/// \param pos The position where the mouse cursor was clicked
	///
	////////////////////////////////////////////////////////////
	void handleMouseButtonReleased(const sf::Vector2f& pos);

	void updateButtons();


	////////////////////////////////////////////////////////////
	// Member data
	////////////////////////////////////////////////////////////
	sf::RenderWindow m_window; ///< GameBoard window
	sf::Sprite m_background; ///< The game sprite sheet
	std::map<size_t, std::unique_ptr<Buttons>> m_buttons; ///< Map to contain buttons by keys

public:

	////////////////////////////////////////////////////////////
	/// \brief Object instance
	///
	/// \return a Menu object
	///
	/// This object can be created only once
	///
	////////////////////////////////////////////////////////////
	static Menu& getInstance();

	////////////////////////////////////////////////////////////
	/// \brief The start point of the application
	///
	///  Handles menu events
	///
	////////////////////////////////////////////////////////////
	void activate();
};