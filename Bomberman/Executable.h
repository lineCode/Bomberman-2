#pragma once
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include "Menu.h"

#include <SFML/Graphics/Sprite.hpp>
#include <SFML/Graphics/RenderWindow.hpp>

////////////////////////////////////////////////////////////
/// \brief The buttons executables
///
////////////////////////////////////////////////////////////
class Executable {
public:
	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the window
	///
	////////////////////////////////////////////////////////////
	explicit Executable(sf::RenderWindow& window);

	////////////////////////////////////////////////////////////
	/// \brief Destructor
	///
	////////////////////////////////////////////////////////////
	virtual ~Executable() = default;

	virtual void run() = 0;

	////////////////////////////////////////////////////////////
	/// \brief Keeps the window open to display information
	///
	////////////////////////////////////////////////////////////
	void waitForUserClick();

protected:
	sf::RenderWindow& m_window; ///< Display window
	sf::Sprite m_background;
	MenuButton m_button;
};

class HighScore : public Executable {
public:
	explicit HighScore(sf::RenderWindow& window);

	////////////////////////////////////////////////////////////
	/// \brief  Gets the information of the game from a text file
	///
	/// \ return a string with file context 
	///
	////////////////////////////////////////////////////////////
	std::string getFileInfo() const;
	void run() override;
};

class Instructions : public Executable {
public:
	explicit Instructions(sf::RenderWindow& window);
	void run() override;
private:
	sf::Sprite m_info;
};
