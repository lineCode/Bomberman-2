#pragma once
////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <SFML/Graphics/Sprite.hpp>
#include <SFML/Graphics/RenderWindow.hpp>

////////////////////////////////////////////////////////////
/// \brief The game buttons
///
////////////////////////////////////////////////////////////
class Buttons {
public:
	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture
	///
	////////////////////////////////////////////////////////////
	explicit Buttons(const sf::IntRect& rect);

	////////////////////////////////////////////////////////////
	/// \brief  Destructor
	///
	////////////////////////////////////////////////////////////
	virtual ~Buttons() = default;

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	virtual	void execute(sf::RenderWindow& window) = 0;

	////////////////////////////////////////////////////////////
	/// \brief Checks if the button was clicked
	///
	/// \param pos the click position
	///
	/// \return True if the button was clicked and false if not
	///
	////////////////////////////////////////////////////////////
	bool contains(const sf::Vector2f& pos) const;

	////////////////////////////////////////////////////////////
	/// \brief Checks if the mouse button is clicked
	///
	/// \param pos the click position
	///
	/// \return True if the button was clicked and false if not
	///
	////////////////////////////////////////////////////////////
	bool isMouseOverButton(const sf::Vector2f& pos);

	////////////////////////////////////////////////////////////
	/// \brief Get button sprite
	///
	/// \return The button sprite
	///
	////////////////////////////////////////////////////////////
	const sf::Sprite& getSprite() const;

	////////////////////////////////////////////////////////////
	/// \brief Set button sprite
	///
	/// Sets the button sprite to the given rectangle area on the sprite sheet
	///
	////////////////////////////////////////////////////////////
	void setSprite(const sf::IntRect& rect);

	////////////////////////////////////////////////////////////
	/// \brief Set position
	///
	/// \param pos the position for locate the button
	///
	////////////////////////////////////////////////////////////
	void setPosition(const sf::Vector2f& pos);

	////////////////////////////////////////////////////////////
	/// \brief plays the click sound
	///
	////////////////////////////////////////////////////////////
	static void playSound();
	
	////////////////////////////////////////////////////////////
	/// \brief update to the original texture
	///
	////////////////////////////////////////////////////////////
	void update();

protected:

	////////////////////////////////////////////////////////////
	// Member data
	////////////////////////////////////////////////////////////
	sf::VideoMode m_mode;
	sf::Sprite m_sprite; ///< Button texture
	bool m_set; ///< Update flag
	sf::Vector2f m_center; ///< Center of current screen 
	sf::Vector2f m_size; ///< Size of current screen 
};

////////////////////////////////////////////////////////////
/// \brief Start button
///
////////////////////////////////////////////////////////////
class StartButton : public Buttons {
public:

	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture and position
	///
	////////////////////////////////////////////////////////////
	StartButton();

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	void execute(sf::RenderWindow& window) override;
};


////////////////////////////////////////////////////////////
/// \brief Start button
///
////////////////////////////////////////////////////////////
class HighScoreButton : public Buttons {
public:

	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture and position
	///
	////////////////////////////////////////////////////////////
	HighScoreButton();

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	void execute(sf::RenderWindow& window) override;
};

////////////////////////////////////////////////////////////
/// \brief Help button
///
////////////////////////////////////////////////////////////
class HelpButton : public Buttons {
public:

	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture and position
	///
	////////////////////////////////////////////////////////////
	HelpButton();

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	void execute(sf::RenderWindow& window) override;
};

////////////////////////////////////////////////////////////
/// \brief Exit button
///
////////////////////////////////////////////////////////////
class ExitButton : public Buttons {
public:

	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture and position
	///
	////////////////////////////////////////////////////////////
	ExitButton();

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	void execute(sf::RenderWindow& window) override;
};

////////////////////////////////////////////////////////////
/// \brief Menu button 
///
////////////////////////////////////////////////////////////
class MenuButton : public Buttons {
public:

	////////////////////////////////////////////////////////////
	/// \brief Constructor
	///
	/// Sets the button size and texture and position
	///
	////////////////////////////////////////////////////////////
	MenuButton();

	////////////////////////////////////////////////////////////
	/// \brief  Executes the button command
	///
	/// \param window to display the command result 
	///
	////////////////////////////////////////////////////////////
	void execute(sf::RenderWindow& window) override;
};